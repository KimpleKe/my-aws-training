{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This stack needs some locking down!",
    "Parameters": {
        "ImageId": {
            "Description": "The AMI ID to use to launch the instance",
            "Type": "AWS::EC2::Image::Id",
            "Default" : "ami-162c2575"
        },
        "InstanceType": {
            "Description": "Type of the instance to launch",
            "Type": "String",
            "Default": "t2.micro"
        },
        "KeyName": {
            "Description": "Key pair to install by default",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "SubnetId": {
            "Description": "The Id of the subnet the instance is going to be launched to",
            "Type": "AWS::EC2::Subnet::Id",
            "Default" : "subnet-61eabe17"
        },
        "VpcId" : {
            "Description" : "The Id of our VPC",
            "Type" : "AWS::EC2::VPC::Id",
            "Default" : "vpc-a93fa5cd"
        }
    },
    "Resources": {
        "InstanceProfile" : {
            "Type" : "AWS::IAM::InstanceProfile",
            "Properties" : {
                "Path" : "/",
                "Roles" : [{ "Ref" : "Role" }]
            }
        },
        "Role" : {
            "Type" : "AWS::IAM::Role",
            "Properties" : {
                "AssumeRolePolicyDocument" : {
                    "Statement" : [{
                        "Action" : [ "sts:AssumeRole" ],
                        "Effect" : "Allow",
                        "Principal" : { "Service" : [ "ec2.amazonaws.com" ] }
                    }]
                },
                "Path" : "/",
                "Policies" : [{
                    "PolicyDocument" : {
                        "Statement" : [
                            {
                                "Action" : [ "s3:*" ],
                                "Effect" : "Allow",
                                "Resource" : "*"
                            }
                        ]
                    },
                    "PolicyName" : "s3"
                }]
            }
        },
        "InstanceA": {
            "Type" : "AWS::EC2::Instance",
            "Properties" : {
                "ImageId" : { "Ref": "ImageId" },
                "InstanceType" : { "Ref": "InstanceType" },
                "KeyName" : { "Ref": "KeyName" },
                "IamInstanceProfile" : { "Ref": "InstanceProfile" },
                "NetworkInterfaces": [
                    {
                        "GroupSet": [{ "Ref": "SecurityGroupA" }],
                        "AssociatePublicIpAddress": "true",
                        "DeviceIndex": "0",
                        "DeleteOnTermination": "true",
                        "SubnetId": { "Ref": "SubnetId" }
                    }
                ],
                "Tags" : [
                    {
                        "Key" : "Name",
                        "Value" : { "Fn::Join" : [ "", [ { "Ref" : "AWS::StackName" }, "-A" ] ] }
                    }
                ]
            }
        },
        "InstanceB": {
            "Type" : "AWS::EC2::Instance",
            "Properties" : {
                "ImageId" : { "Ref": "ImageId" },
                "InstanceType" : { "Ref": "InstanceType" },
                "KeyName" : { "Ref": "KeyName" },
                "IamInstanceProfile" : { "Ref": "InstanceProfile" },
                "NetworkInterfaces": [
                    {
                        "GroupSet": [{ "Ref": "SecurityGroupB" }],
                        "AssociatePublicIpAddress": "true",
                        "DeviceIndex": "0",
                        "DeleteOnTermination": "true",
                        "SubnetId": { "Ref": "SubnetId" }
                    }
                ],
                "Tags" : [
                    {
                        "Key" : "Name",
                        "Value" : { "Fn::Join" : [ "", [ { "Ref" : "AWS::StackName" }, "-B" ] ] }
                    }
                ]
            }
        },
        "SecurityGroupA" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Firewall rules",
                "VpcId": { "Ref": "VpcId" },
                "SecurityGroupIngress": [
                    {
                        "CidrIp" : "203.17.253.249/32",
                        "FromPort" : "22",
                        "IpProtocol" : "tcp",
                        "ToPort" : "22"
                    }
                ]
            }
        },
        "SecurityGroupB" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Firewall rules",
                "VpcId": { "Ref": "VpcId" },
                "SecurityGroupIngress": [
                    {
                        "CidrIp" : "203.17.253.249/32",
                        "FromPort" : "22",
                        "IpProtocol" : "tcp",
                        "ToPort" : "22"
                    },
                    {
                        "CidrIp" : "10.0.0.0/8",
                        "FromPort" : "22",
                        "IpProtocol" : "tcp",
                        "ToPort" : "22"
                    }
                ]
            }
        }
    },
    "Outputs": {
        "InstanceA": {
            "Description": "The public DNS name assigned to the A instance",
            "Value": { "Fn::GetAtt": [ "InstanceA", "PublicDnsName" ] }
        },
        "InstanceB": {
            "Description": "The public DNS name assigned to the B instance",
            "Value": { "Fn::GetAtt": [ "InstanceB", "PublicDnsName" ] }
        }
    }
}
